openapi: 3.0.3
info:
  title: Topic API
  version: 0.14.0
paths:
  /api/topic:
    get:
      description: List all topics by Name and ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopicIdentifiers'
    post:
      description: Create a new Topic
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TopicIdentifiers'
                - $ref: '#/components/schemas/TopicProperties'
      responses:
        '201':
          $ref: '#/components/responses/Topic'
  /api/topic/{id}:
    get:
      description: Return a Topic by ID
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          $ref: '#/components/responses/Topic'
    patch:
      description: Update a Topic by ID
      parameters:
        - $ref: '#/components/parameters/Id'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TopicIdentifiers'
                - $ref: '#/components/schemas/TopicProperties'
      responses:
        '200':
          $ref: '#/components/responses/Topic'
  /api/topic/{id}/resource:
    post:
      description: Add a resource to a topic
      parameters:
        - $ref: '#/components/parameters/Id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        '200':
          $ref: '#/components/responses/Topic'
  /api/topic/{id}/resource/{name}:
    patch:
      description: Update a resource on a topic
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Name'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
    delete:
      description: Remove a resource from a Topic
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Name'
      responses:
        '200':
          description: OK
  /api/topic/healthy:
    get:
      responses:
        '200':
          description: OK
components:
  responses:
    Topic:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Topic'
  parameters:
    Id:
      name: id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/TopicIdentifiers/properties/Id'
    Name:
      name: name
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/TopicIdentifiers/properties/Name'
  schemas:
    TopicIdentifiers:
      type: object
      properties:
        Id:
          type: string
          readOnly: true
        Name:
          type: string
    TopicProperties:
      type: object
      properties:
        Status:
          type: string
          enum:
            - Active
            - Archived
        Description:
          type: string
        Category:
          type: string
          enum:
            - Foundations of ITSM
            - Design and Development
            - Infrastructure and Operations
            - Networking and Security
            - Development Tools and Practices
            - Data Management
            - Continuous Integration and Deployment
            - Monitoring and Performance
        Path:
          type: string
          enum:
            - Odin
            - EngineerKit
            - SRE Speciality
            - Data Specialty
            - AWS Cloud Hosting
            - Salesforce
        Sequence:
          type: string
        Skills:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
    TopicResources:
      properties:
        Resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
    Topic:
      required:
        - Name
      allOf:
        - $ref: '#/components/schemas/TopicIdentifiers'
        - $ref: '#/components/schemas/TopicProperties'
        - $ref: '#/components/schemas/TopicResources'
    Resource:
      type: object
      properties:
        Name:
          type: string
        Status:
          type: string
          enum:
            - Active
            - Archived
        Description:
          type: string
        Duration:
          type: integer
        Link:
          type: string
        Skills:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
        Tags:
          type: array
          items:
            type: string
            enum:
              - $
              - Article
              - Book
              - Exam
              - Interactive
              - Lecture
              - Lesson
              - Reference
              - Tutorial
              - User Guide
              - Video
              - UI/UX
              - API
              - Data
              - SRE
    Skill:
      type: object
      properties:
        Name:
          type: string
        Status:
          type: string
          enum:
            - Active
            - Archived
        Description:
          type: string
        Mastery:
          type: string
          enum:
            - Candidate
            - Apprentice
            - Resident
            - Master
            - Distinguished
        Speciality:
          type: string
          enum:
            - Generalist
            - UI/UX Engineer
            - API Engineer
            - Data Engineer
            - SRE Engineer
